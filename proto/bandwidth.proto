syntax = "proto3";
package bandwidth;

service BandwidthService {
    rpc SayHello (HelloRequest) returns (HelloReply);
    rpc GetBandwidth (BandwidthRequest) returns (DataMsg);
    rpc SubscribeBandwidth (BandwidthRequest) returns (stream DataMsg);
}

service ClientDataService {
    rpc ClientStream (stream DataMsg) returns (HelloMessage); // Empty return value
}

message DataMsg {
    oneof data {
        BandwidthMessage bandwidth = 1;
        HelloMessage hello = 2;
        Rtts rtts = 3;
        PgmMessage pgmmsg = 4;
    }
}

message LinkState {
    string sender_ip = 1; // Ip addr of the sender
    string receiver_ip = 2; // Ip addr of the receiver
    double thp_in = 3; // Bytes in per second since last report
    double thp_out = 4; // Bytes out per second since last report
    double bw = 5; // Iperf3 bandwidth estimate
    double abw = 6; // Available Bandwidth estimate
    double latency = 7; // Latency in seconds
    double delay = 8; // Unused
    double jitter = 9; // Unused
    double loss = 10; // Unused
    int64 timestamp = 11; // Timestamp defined by the sender in milliseconds since epoch
}

message PgmDp {
    double gin = 1; // Gap in (seconds)
    double gout = 2; // Gap out (seconds)
    int32 len = 3; // Avg packet size in cumulative ack (bytes)
    int32 num_acked = 4; // Number of packets acked
}

message PgmDps {
    string sender_ip = 1; // Ip addr of the sender (source)
    string receiver_ip = 2;  // Ip addr of the receiver (source)
    int64 timestamp = 3; // Timestamp defined by the sender in milliseconds since epoch
    repeated PgmDp pgm_dp = 4;
}

message PgmMessage {
    repeated PgmDps pgm_dps = 1; // Nested array of PgmDps
}

message Rtt {
    double rtt = 1; // seconds
    int64 timestamp = 2; // Timestamp defined by the sender in milliseconds since epoch
}

message RttMessage {
    string sender_ip = 1;
    string receiver_ip = 2;
    repeated Rtt rtt = 3;
}

message Rtts {
    repeated RttMessage rtts = 1;
}

message BandwidthMessage {
    // An array of bandwidth messages
    //repeated Bandwidth bandwidth = 1;
    repeated LinkState link_state = 1;
}

message HelloMessage {
    string message = 1;
}

message HelloRequest {
    string name = 1;
}

message BandwidthRequest {
    string name = 1;
}

message HelloReply {
    string ip_addr = 1;
}

